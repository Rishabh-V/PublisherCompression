/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.18.1)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Protocol.Entities;
using Thrift.Protocol.Utilities;
using Thrift.Transport;
using Thrift.Transport.Client;
using Thrift.Transport.Server;
using Thrift.Processor;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0017  // object init can be simplified
#pragma warning disable IDE0028  // collection init can be simplified
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Google.Cloud.PubSub.Compression.Thrift
{

  public partial class Space : TBase
  {
    private global::Google.Cloud.PubSub.Compression.Thrift.Profile _profile;
    private global::Google.Cloud.PubSub.Compression.Thrift.HomePage _homePage;
    private global::Google.Cloud.PubSub.Compression.Thrift.Timeline _timeline;
    private List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> _followers;
    private List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> _followees;

    public global::Google.Cloud.PubSub.Compression.Thrift.Profile Profile
    {
      get
      {
        return _profile;
      }
      set
      {
        __isset.profile = true;
        this._profile = value;
      }
    }

    public global::Google.Cloud.PubSub.Compression.Thrift.HomePage HomePage
    {
      get
      {
        return _homePage;
      }
      set
      {
        __isset.homePage = true;
        this._homePage = value;
      }
    }

    public global::Google.Cloud.PubSub.Compression.Thrift.Timeline Timeline
    {
      get
      {
        return _timeline;
      }
      set
      {
        __isset.timeline = true;
        this._timeline = value;
      }
    }

    public List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> Followers
    {
      get
      {
        return _followers;
      }
      set
      {
        __isset.followers = true;
        this._followers = value;
      }
    }

    public List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> Followees
    {
      get
      {
        return _followees;
      }
      set
      {
        __isset.followees = true;
        this._followees = value;
      }
    }


    public Isset __isset;
    public struct Isset
    {
      public bool profile;
      public bool homePage;
      public bool timeline;
      public bool followers;
      public bool followees;
    }

    public Space()
    {
    }

    public Space DeepCopy()
    {
      var tmp82 = new Space();
      if((Profile != null) && __isset.profile)
      {
        tmp82.Profile = (global::Google.Cloud.PubSub.Compression.Thrift.Profile)this.Profile.DeepCopy();
      }
      tmp82.__isset.profile = this.__isset.profile;
      if((HomePage != null) && __isset.homePage)
      {
        tmp82.HomePage = (global::Google.Cloud.PubSub.Compression.Thrift.HomePage)this.HomePage.DeepCopy();
      }
      tmp82.__isset.homePage = this.__isset.homePage;
      if((Timeline != null) && __isset.timeline)
      {
        tmp82.Timeline = (global::Google.Cloud.PubSub.Compression.Thrift.Timeline)this.Timeline.DeepCopy();
      }
      tmp82.__isset.timeline = this.__isset.timeline;
      if((Followers != null) && __isset.followers)
      {
        tmp82.Followers = this.Followers.DeepCopy();
      }
      tmp82.__isset.followers = this.__isset.followers;
      if((Followees != null) && __isset.followees)
      {
        tmp82.Followees = this.Followees.DeepCopy();
      }
      tmp82.__isset.followees = this.__isset.followees;
      return tmp82;
    }

    public async global::System.Threading.Tasks.Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        await iprot.ReadStructBeginAsync(cancellationToken);
        while (true)
        {
          field = await iprot.ReadFieldBeginAsync(cancellationToken);
          if (field.Type == TType.Stop)
          {
            break;
          }

          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct)
              {
                Profile = new global::Google.Cloud.PubSub.Compression.Thrift.Profile();
                await Profile.ReadAsync(iprot, cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 2:
              if (field.Type == TType.Struct)
              {
                HomePage = new global::Google.Cloud.PubSub.Compression.Thrift.HomePage();
                await HomePage.ReadAsync(iprot, cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 3:
              if (field.Type == TType.Struct)
              {
                Timeline = new global::Google.Cloud.PubSub.Compression.Thrift.Timeline();
                await Timeline.ReadAsync(iprot, cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 4:
              if (field.Type == TType.List)
              {
                {
                  var _list83 = await iprot.ReadListBeginAsync(cancellationToken);
                  Followers = new List<global::Google.Cloud.PubSub.Compression.Thrift.Profile>(_list83.Count);
                  for(int _i84 = 0; _i84 < _list83.Count; ++_i84)
                  {
                    global::Google.Cloud.PubSub.Compression.Thrift.Profile _elem85;
                    _elem85 = new global::Google.Cloud.PubSub.Compression.Thrift.Profile();
                    await _elem85.ReadAsync(iprot, cancellationToken);
                    Followers.Add(_elem85);
                  }
                  await iprot.ReadListEndAsync(cancellationToken);
                }
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 5:
              if (field.Type == TType.List)
              {
                {
                  var _list86 = await iprot.ReadListBeginAsync(cancellationToken);
                  Followees = new List<global::Google.Cloud.PubSub.Compression.Thrift.Profile>(_list86.Count);
                  for(int _i87 = 0; _i87 < _list86.Count; ++_i87)
                  {
                    global::Google.Cloud.PubSub.Compression.Thrift.Profile _elem88;
                    _elem88 = new global::Google.Cloud.PubSub.Compression.Thrift.Profile();
                    await _elem88.ReadAsync(iprot, cancellationToken);
                    Followees.Add(_elem88);
                  }
                  await iprot.ReadListEndAsync(cancellationToken);
                }
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            default: 
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              break;
          }

          await iprot.ReadFieldEndAsync(cancellationToken);
        }

        await iprot.ReadStructEndAsync(cancellationToken);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public async global::System.Threading.Tasks.Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
    {
      oprot.IncrementRecursionDepth();
      try
      {
        var tmp89 = new TStruct("Space");
        await oprot.WriteStructBeginAsync(tmp89, cancellationToken);
        var tmp90 = new TField();
        if((Profile != null) && __isset.profile)
        {
          tmp90.Name = "profile";
          tmp90.Type = TType.Struct;
          tmp90.ID = 1;
          await oprot.WriteFieldBeginAsync(tmp90, cancellationToken);
          await Profile.WriteAsync(oprot, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((HomePage != null) && __isset.homePage)
        {
          tmp90.Name = "homePage";
          tmp90.Type = TType.Struct;
          tmp90.ID = 2;
          await oprot.WriteFieldBeginAsync(tmp90, cancellationToken);
          await HomePage.WriteAsync(oprot, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((Timeline != null) && __isset.timeline)
        {
          tmp90.Name = "timeline";
          tmp90.Type = TType.Struct;
          tmp90.ID = 3;
          await oprot.WriteFieldBeginAsync(tmp90, cancellationToken);
          await Timeline.WriteAsync(oprot, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((Followers != null) && __isset.followers)
        {
          tmp90.Name = "followers";
          tmp90.Type = TType.List;
          tmp90.ID = 4;
          await oprot.WriteFieldBeginAsync(tmp90, cancellationToken);
          await oprot.WriteListBeginAsync(new TList(TType.Struct, Followers.Count), cancellationToken);
          foreach (global::Google.Cloud.PubSub.Compression.Thrift.Profile _iter91 in Followers)
          {
            await _iter91.WriteAsync(oprot, cancellationToken);
          }
          await oprot.WriteListEndAsync(cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((Followees != null) && __isset.followees)
        {
          tmp90.Name = "followees";
          tmp90.Type = TType.List;
          tmp90.ID = 5;
          await oprot.WriteFieldBeginAsync(tmp90, cancellationToken);
          await oprot.WriteListBeginAsync(new TList(TType.Struct, Followees.Count), cancellationToken);
          foreach (global::Google.Cloud.PubSub.Compression.Thrift.Profile _iter92 in Followees)
          {
            await _iter92.WriteAsync(oprot, cancellationToken);
          }
          await oprot.WriteListEndAsync(cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        await oprot.WriteFieldStopAsync(cancellationToken);
        await oprot.WriteStructEndAsync(cancellationToken);
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override bool Equals(object that)
    {
      if (!(that is Space other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return ((__isset.profile == other.__isset.profile) && ((!__isset.profile) || (global::System.Object.Equals(Profile, other.Profile))))
        && ((__isset.homePage == other.__isset.homePage) && ((!__isset.homePage) || (global::System.Object.Equals(HomePage, other.HomePage))))
        && ((__isset.timeline == other.__isset.timeline) && ((!__isset.timeline) || (global::System.Object.Equals(Timeline, other.Timeline))))
        && ((__isset.followers == other.__isset.followers) && ((!__isset.followers) || (global::System.Object.Equals(Followers, other.Followers))))
        && ((__isset.followees == other.__isset.followees) && ((!__isset.followees) || (global::System.Object.Equals(Followees, other.Followees))));
    }

    public override int GetHashCode() {
      int hashcode = 157;
      unchecked {
        if((Profile != null) && __isset.profile)
        {
          hashcode = (hashcode * 397) + Profile.GetHashCode();
        }
        if((HomePage != null) && __isset.homePage)
        {
          hashcode = (hashcode * 397) + HomePage.GetHashCode();
        }
        if((Timeline != null) && __isset.timeline)
        {
          hashcode = (hashcode * 397) + Timeline.GetHashCode();
        }
        if((Followers != null) && __isset.followers)
        {
          hashcode = (hashcode * 397) + Followers.GetHashCode();
        }
        if((Followees != null) && __isset.followees)
        {
          hashcode = (hashcode * 397) + Followees.GetHashCode();
        }
      }
      return hashcode;
    }

    public override string ToString()
    {
      var tmp93 = new StringBuilder("Space(");
      int tmp94 = 0;
      if((Profile != null) && __isset.profile)
      {
        if(0 < tmp94++) { tmp93.Append(", "); }
        tmp93.Append("Profile: ");
        Profile.ToString(tmp93);
      }
      if((HomePage != null) && __isset.homePage)
      {
        if(0 < tmp94++) { tmp93.Append(", "); }
        tmp93.Append("HomePage: ");
        HomePage.ToString(tmp93);
      }
      if((Timeline != null) && __isset.timeline)
      {
        if(0 < tmp94++) { tmp93.Append(", "); }
        tmp93.Append("Timeline: ");
        Timeline.ToString(tmp93);
      }
      if((Followers != null) && __isset.followers)
      {
        if(0 < tmp94++) { tmp93.Append(", "); }
        tmp93.Append("Followers: ");
        Followers.ToString(tmp93);
      }
      if((Followees != null) && __isset.followees)
      {
        if(0 < tmp94++) { tmp93.Append(", "); }
        tmp93.Append("Followees: ");
        Followees.ToString(tmp93);
      }
      tmp93.Append(')');
      return tmp93.ToString();
    }
  }

}
