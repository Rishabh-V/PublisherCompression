/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.18.1)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Protocol.Entities;
using Thrift.Protocol.Utilities;
using Thrift.Transport;
using Thrift.Transport.Client;
using Thrift.Transport.Server;
using Thrift.Processor;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0017  // object init can be simplified
#pragma warning disable IDE0028  // collection init can be simplified
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Google.Cloud.PubSub.Compression.Thrift
{

  public partial class HomePage : TBase
  {
    private global::Google.Cloud.PubSub.Compression.Thrift.Profile _profile;
    private List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> _profileTweets;

    public global::Google.Cloud.PubSub.Compression.Thrift.Profile Profile
    {
      get
      {
        return _profile;
      }
      set
      {
        __isset.profile = true;
        this._profile = value;
      }
    }

    public List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> ProfileTweets
    {
      get
      {
        return _profileTweets;
      }
      set
      {
        __isset.profileTweets = true;
        this._profileTweets = value;
      }
    }


    public Isset __isset;
    public struct Isset
    {
      public bool profile;
      public bool profileTweets;
    }

    public HomePage()
    {
    }

    public HomePage DeepCopy()
    {
      var tmp73 = new HomePage();
      if((Profile != null) && __isset.profile)
      {
        tmp73.Profile = (global::Google.Cloud.PubSub.Compression.Thrift.Profile)this.Profile.DeepCopy();
      }
      tmp73.__isset.profile = this.__isset.profile;
      if((ProfileTweets != null) && __isset.profileTweets)
      {
        tmp73.ProfileTweets = this.ProfileTweets.DeepCopy();
      }
      tmp73.__isset.profileTweets = this.__isset.profileTweets;
      return tmp73;
    }

    public async global::System.Threading.Tasks.Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        await iprot.ReadStructBeginAsync(cancellationToken);
        while (true)
        {
          field = await iprot.ReadFieldBeginAsync(cancellationToken);
          if (field.Type == TType.Stop)
          {
            break;
          }

          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct)
              {
                Profile = new global::Google.Cloud.PubSub.Compression.Thrift.Profile();
                await Profile.ReadAsync(iprot, cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 2:
              if (field.Type == TType.List)
              {
                {
                  var _list74 = await iprot.ReadListBeginAsync(cancellationToken);
                  ProfileTweets = new List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet>(_list74.Count);
                  for(int _i75 = 0; _i75 < _list74.Count; ++_i75)
                  {
                    global::Google.Cloud.PubSub.Compression.Thrift.Tweet _elem76;
                    _elem76 = new global::Google.Cloud.PubSub.Compression.Thrift.Tweet();
                    await _elem76.ReadAsync(iprot, cancellationToken);
                    ProfileTweets.Add(_elem76);
                  }
                  await iprot.ReadListEndAsync(cancellationToken);
                }
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            default: 
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              break;
          }

          await iprot.ReadFieldEndAsync(cancellationToken);
        }

        await iprot.ReadStructEndAsync(cancellationToken);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public async global::System.Threading.Tasks.Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
    {
      oprot.IncrementRecursionDepth();
      try
      {
        var tmp77 = new TStruct("HomePage");
        await oprot.WriteStructBeginAsync(tmp77, cancellationToken);
        var tmp78 = new TField();
        if((Profile != null) && __isset.profile)
        {
          tmp78.Name = "profile";
          tmp78.Type = TType.Struct;
          tmp78.ID = 1;
          await oprot.WriteFieldBeginAsync(tmp78, cancellationToken);
          await Profile.WriteAsync(oprot, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((ProfileTweets != null) && __isset.profileTweets)
        {
          tmp78.Name = "profileTweets";
          tmp78.Type = TType.List;
          tmp78.ID = 2;
          await oprot.WriteFieldBeginAsync(tmp78, cancellationToken);
          await oprot.WriteListBeginAsync(new TList(TType.Struct, ProfileTweets.Count), cancellationToken);
          foreach (global::Google.Cloud.PubSub.Compression.Thrift.Tweet _iter79 in ProfileTweets)
          {
            await _iter79.WriteAsync(oprot, cancellationToken);
          }
          await oprot.WriteListEndAsync(cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        await oprot.WriteFieldStopAsync(cancellationToken);
        await oprot.WriteStructEndAsync(cancellationToken);
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override bool Equals(object that)
    {
      if (!(that is HomePage other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return ((__isset.profile == other.__isset.profile) && ((!__isset.profile) || (global::System.Object.Equals(Profile, other.Profile))))
        && ((__isset.profileTweets == other.__isset.profileTweets) && ((!__isset.profileTweets) || (global::System.Object.Equals(ProfileTweets, other.ProfileTweets))));
    }

    public override int GetHashCode() {
      int hashcode = 157;
      unchecked {
        if((Profile != null) && __isset.profile)
        {
          hashcode = (hashcode * 397) + Profile.GetHashCode();
        }
        if((ProfileTweets != null) && __isset.profileTweets)
        {
          hashcode = (hashcode * 397) + ProfileTweets.GetHashCode();
        }
      }
      return hashcode;
    }

    public override string ToString()
    {
      var tmp80 = new StringBuilder("HomePage(");
      int tmp81 = 0;
      if((Profile != null) && __isset.profile)
      {
        if(0 < tmp81++) { tmp80.Append(", "); }
        tmp80.Append("Profile: ");
        Profile.ToString(tmp80);
      }
      if((ProfileTweets != null) && __isset.profileTweets)
      {
        if(0 < tmp81++) { tmp80.Append(", "); }
        tmp80.Append("ProfileTweets: ");
        ProfileTweets.ToString(tmp80);
      }
      tmp80.Append(')');
      return tmp80.ToString();
    }
  }

}
