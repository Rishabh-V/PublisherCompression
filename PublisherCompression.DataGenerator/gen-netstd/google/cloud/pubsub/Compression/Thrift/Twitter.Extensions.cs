/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.18.1)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0017  // object init can be simplified
#pragma warning disable IDE0028  // collection init can be simplified
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Google.Cloud.PubSub.Compression.Thrift
{
  public static class TwitterExtensions
  {
    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Address> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Address> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Address> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Address> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Address> source)
    {
      if (source == null)
        return null;

      var tmp104 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Address>(source.Count);
      foreach (var elem in source)
        tmp104.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp104;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Education> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Education> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Education> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Education> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Education> source)
    {
      if (source == null)
        return null;

      var tmp105 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Education>(source.Count);
      foreach (var elem in source)
        tmp105.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp105;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Job> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Job> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Job> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Job> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Job> source)
    {
      if (source == null)
        return null;

      var tmp106 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Job>(source.Count);
      foreach (var elem in source)
        tmp106.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp106;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Person> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Person> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Person> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Person> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Person> source)
    {
      if (source == null)
        return null;

      var tmp107 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Person>(source.Count);
      foreach (var elem in source)
        tmp107.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp107;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Phone> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Phone> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Phone> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Phone> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Phone> source)
    {
      if (source == null)
        return null;

      var tmp108 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Phone>(source.Count);
      foreach (var elem in source)
        tmp108.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp108;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Profile> source)
    {
      if (source == null)
        return null;

      var tmp109 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Profile>(source.Count);
      foreach (var elem in source)
        tmp109.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp109;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Space> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Space> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Space> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Space> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Space> source)
    {
      if (source == null)
        return null;

      var tmp110 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Space>(source.Count);
      foreach (var elem in source)
        tmp110.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp110;
    }


    public static bool Equals(this List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> instance, object that)
    {
      if (!(that is List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> DeepCopy(this List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> source)
    {
      if (source == null)
        return null;

      var tmp111 = new List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet>(source.Count);
      foreach (var elem in source)
        tmp111.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp111;
    }


  }
}
