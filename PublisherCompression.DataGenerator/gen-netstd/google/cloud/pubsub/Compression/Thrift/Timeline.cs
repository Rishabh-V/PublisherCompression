/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.18.1)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Protocol.Entities;
using Thrift.Protocol.Utilities;
using Thrift.Transport;
using Thrift.Transport.Client;
using Thrift.Transport.Server;
using Thrift.Processor;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0017  // object init can be simplified
#pragma warning disable IDE0028  // collection init can be simplified
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Google.Cloud.PubSub.Compression.Thrift
{

  public partial class Timeline : TBase
  {
    private List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> _profileTweets;
    private List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> _followerTweets;
    private List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> _followeeTweets;

    public List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> ProfileTweets
    {
      get
      {
        return _profileTweets;
      }
      set
      {
        __isset.profileTweets = true;
        this._profileTweets = value;
      }
    }

    public List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> FollowerTweets
    {
      get
      {
        return _followerTweets;
      }
      set
      {
        __isset.followerTweets = true;
        this._followerTweets = value;
      }
    }

    public List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet> FolloweeTweets
    {
      get
      {
        return _followeeTweets;
      }
      set
      {
        __isset.followeeTweets = true;
        this._followeeTweets = value;
      }
    }


    public Isset __isset;
    public struct Isset
    {
      public bool profileTweets;
      public bool followerTweets;
      public bool followeeTweets;
    }

    public Timeline()
    {
    }

    public Timeline DeepCopy()
    {
      var tmp56 = new Timeline();
      if((ProfileTweets != null) && __isset.profileTweets)
      {
        tmp56.ProfileTweets = this.ProfileTweets.DeepCopy();
      }
      tmp56.__isset.profileTweets = this.__isset.profileTweets;
      if((FollowerTweets != null) && __isset.followerTweets)
      {
        tmp56.FollowerTweets = this.FollowerTweets.DeepCopy();
      }
      tmp56.__isset.followerTweets = this.__isset.followerTweets;
      if((FolloweeTweets != null) && __isset.followeeTweets)
      {
        tmp56.FolloweeTweets = this.FolloweeTweets.DeepCopy();
      }
      tmp56.__isset.followeeTweets = this.__isset.followeeTweets;
      return tmp56;
    }

    public async global::System.Threading.Tasks.Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        await iprot.ReadStructBeginAsync(cancellationToken);
        while (true)
        {
          field = await iprot.ReadFieldBeginAsync(cancellationToken);
          if (field.Type == TType.Stop)
          {
            break;
          }

          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.List)
              {
                {
                  var _list57 = await iprot.ReadListBeginAsync(cancellationToken);
                  ProfileTweets = new List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet>(_list57.Count);
                  for(int _i58 = 0; _i58 < _list57.Count; ++_i58)
                  {
                    global::Google.Cloud.PubSub.Compression.Thrift.Tweet _elem59;
                    _elem59 = new global::Google.Cloud.PubSub.Compression.Thrift.Tweet();
                    await _elem59.ReadAsync(iprot, cancellationToken);
                    ProfileTweets.Add(_elem59);
                  }
                  await iprot.ReadListEndAsync(cancellationToken);
                }
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 2:
              if (field.Type == TType.List)
              {
                {
                  var _list60 = await iprot.ReadListBeginAsync(cancellationToken);
                  FollowerTweets = new List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet>(_list60.Count);
                  for(int _i61 = 0; _i61 < _list60.Count; ++_i61)
                  {
                    global::Google.Cloud.PubSub.Compression.Thrift.Tweet _elem62;
                    _elem62 = new global::Google.Cloud.PubSub.Compression.Thrift.Tweet();
                    await _elem62.ReadAsync(iprot, cancellationToken);
                    FollowerTweets.Add(_elem62);
                  }
                  await iprot.ReadListEndAsync(cancellationToken);
                }
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 3:
              if (field.Type == TType.List)
              {
                {
                  var _list63 = await iprot.ReadListBeginAsync(cancellationToken);
                  FolloweeTweets = new List<global::Google.Cloud.PubSub.Compression.Thrift.Tweet>(_list63.Count);
                  for(int _i64 = 0; _i64 < _list63.Count; ++_i64)
                  {
                    global::Google.Cloud.PubSub.Compression.Thrift.Tweet _elem65;
                    _elem65 = new global::Google.Cloud.PubSub.Compression.Thrift.Tweet();
                    await _elem65.ReadAsync(iprot, cancellationToken);
                    FolloweeTweets.Add(_elem65);
                  }
                  await iprot.ReadListEndAsync(cancellationToken);
                }
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            default: 
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              break;
          }

          await iprot.ReadFieldEndAsync(cancellationToken);
        }

        await iprot.ReadStructEndAsync(cancellationToken);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public async global::System.Threading.Tasks.Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
    {
      oprot.IncrementRecursionDepth();
      try
      {
        var tmp66 = new TStruct("Timeline");
        await oprot.WriteStructBeginAsync(tmp66, cancellationToken);
        var tmp67 = new TField();
        if((ProfileTweets != null) && __isset.profileTweets)
        {
          tmp67.Name = "profileTweets";
          tmp67.Type = TType.List;
          tmp67.ID = 1;
          await oprot.WriteFieldBeginAsync(tmp67, cancellationToken);
          await oprot.WriteListBeginAsync(new TList(TType.Struct, ProfileTweets.Count), cancellationToken);
          foreach (global::Google.Cloud.PubSub.Compression.Thrift.Tweet _iter68 in ProfileTweets)
          {
            await _iter68.WriteAsync(oprot, cancellationToken);
          }
          await oprot.WriteListEndAsync(cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((FollowerTweets != null) && __isset.followerTweets)
        {
          tmp67.Name = "followerTweets";
          tmp67.Type = TType.List;
          tmp67.ID = 2;
          await oprot.WriteFieldBeginAsync(tmp67, cancellationToken);
          await oprot.WriteListBeginAsync(new TList(TType.Struct, FollowerTweets.Count), cancellationToken);
          foreach (global::Google.Cloud.PubSub.Compression.Thrift.Tweet _iter69 in FollowerTweets)
          {
            await _iter69.WriteAsync(oprot, cancellationToken);
          }
          await oprot.WriteListEndAsync(cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((FolloweeTweets != null) && __isset.followeeTweets)
        {
          tmp67.Name = "followeeTweets";
          tmp67.Type = TType.List;
          tmp67.ID = 3;
          await oprot.WriteFieldBeginAsync(tmp67, cancellationToken);
          await oprot.WriteListBeginAsync(new TList(TType.Struct, FolloweeTweets.Count), cancellationToken);
          foreach (global::Google.Cloud.PubSub.Compression.Thrift.Tweet _iter70 in FolloweeTweets)
          {
            await _iter70.WriteAsync(oprot, cancellationToken);
          }
          await oprot.WriteListEndAsync(cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        await oprot.WriteFieldStopAsync(cancellationToken);
        await oprot.WriteStructEndAsync(cancellationToken);
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override bool Equals(object that)
    {
      if (!(that is Timeline other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return ((__isset.profileTweets == other.__isset.profileTweets) && ((!__isset.profileTweets) || (global::System.Object.Equals(ProfileTweets, other.ProfileTweets))))
        && ((__isset.followerTweets == other.__isset.followerTweets) && ((!__isset.followerTweets) || (global::System.Object.Equals(FollowerTweets, other.FollowerTweets))))
        && ((__isset.followeeTweets == other.__isset.followeeTweets) && ((!__isset.followeeTweets) || (global::System.Object.Equals(FolloweeTweets, other.FolloweeTweets))));
    }

    public override int GetHashCode() {
      int hashcode = 157;
      unchecked {
        if((ProfileTweets != null) && __isset.profileTweets)
        {
          hashcode = (hashcode * 397) + ProfileTweets.GetHashCode();
        }
        if((FollowerTweets != null) && __isset.followerTweets)
        {
          hashcode = (hashcode * 397) + FollowerTweets.GetHashCode();
        }
        if((FolloweeTweets != null) && __isset.followeeTweets)
        {
          hashcode = (hashcode * 397) + FolloweeTweets.GetHashCode();
        }
      }
      return hashcode;
    }

    public override string ToString()
    {
      var tmp71 = new StringBuilder("Timeline(");
      int tmp72 = 0;
      if((ProfileTweets != null) && __isset.profileTweets)
      {
        if(0 < tmp72++) { tmp71.Append(", "); }
        tmp71.Append("ProfileTweets: ");
        ProfileTweets.ToString(tmp71);
      }
      if((FollowerTweets != null) && __isset.followerTweets)
      {
        if(0 < tmp72++) { tmp71.Append(", "); }
        tmp71.Append("FollowerTweets: ");
        FollowerTweets.ToString(tmp71);
      }
      if((FolloweeTweets != null) && __isset.followeeTweets)
      {
        if(0 < tmp72++) { tmp71.Append(", "); }
        tmp71.Append("FolloweeTweets: ");
        FolloweeTweets.ToString(tmp71);
      }
      tmp71.Append(')');
      return tmp71.ToString();
    }
  }

}
